{"ast":null,"code":"var _jsxFileName = \"/Users/staceymcknight/Development/code/Mod5/lutrivia-react/lutrivia/src/components/Question.js\";\nimport React from 'react';\nimport '../App.css';\nimport Button from './Button';\nexport default class Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCorrect: \"NA\"\n    };\n\n    this.handleClick = e => {\n      let scoreValue;\n\n      if (!!e.target.name === this.props.question.answer) {\n        this.setState({\n          isCorrect: true\n        });\n        scoreValue = 1;\n      } else {\n        this.setState({\n          isCorrect: false\n        });\n        scoreValue = 0;\n      }\n\n      this.props.updateScore(scoreValue);\n    };\n\n    this.applyColor = e => {\n      if (this.state.isCorrect !== \"NA\") {\n        return this.state.isCorrect ? \"true\" : \"false\";\n      }\n\n      return \"\";\n    };\n  }\n\n  render() {\n    console.log(\"re-rendered\");\n    return React.createElement(\"div\", {\n      className: \"question-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.question.text, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Button, {\n      handleClick: this.handleClick,\n      text: \"True\",\n      name: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Button, {\n      handleClick: this.handleClick,\n      text: \"False\",\n      name: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/staceymcknight/Development/code/Mod5/lutrivia-react/lutrivia/src/components/Question.js"],"names":["React","Button","Question","Component","state","isCorrect","handleClick","e","scoreValue","target","name","props","question","answer","setState","updateScore","applyColor","render","console","log","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEpDC,KAFoD,GAE5C;AACNC,MAAAA,SAAS,EAAE;AADL,KAF4C;;AAAA,SAMpDC,WANoD,GAMrCC,CAAD,IAAO;AACnB,UAAIC,UAAJ;;AACA,UAAI,CAAC,CAACD,CAAC,CAACE,MAAF,CAASC,IAAX,KAAoB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAA5C,EAAoD;AAClD,aAAKC,QAAL,CAAc;AAACT,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACAG,QAAAA,UAAU,GAAG,CAAb;AACD,OAHD,MAGO;AACL,aAAKM,QAAL,CAAc;AAACT,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACAG,QAAAA,UAAU,GAAG,CAAb;AACD;;AACD,WAAKG,KAAL,CAAWI,WAAX,CAAuBP,UAAvB;AACD,KAhBmD;;AAAA,SAkBpDQ,UAlBoD,GAkBtCT,CAAD,IAAO;AAClB,UAAI,KAAKH,KAAL,CAAWC,SAAX,KAAyB,IAA7B,EAAmC;AACjC,eAAO,KAAKD,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC,OAAvC;AACD;;AACD,aAAO,EAAP;AACD,KAvBmD;AAAA;;AAyBpDY,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,WAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,IADvB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKd,WAA1B;AAAuC,MAAA,IAAI,EAAC,MAA5C;AAAmD,MAAA,IAAI,EAAC,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKA,WAA1B;AAAuC,MAAA,IAAI,EAAC,OAA5C;AAAoD,MAAA,IAAI,EAAC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CAFF;AAUD;;AArCmD","sourcesContent":["import React from 'react'\nimport '../App.css'\nimport Button from './Button'\n\nexport default class Question extends React.Component {\n\n  state = {\n    isCorrect: \"NA\"\n  }\n\n  handleClick = (e) => {\n    let scoreValue;\n    if (!!e.target.name === this.props.question.answer) {\n      this.setState({isCorrect: true})\n      scoreValue = 1\n    } else {\n      this.setState({isCorrect: false})\n      scoreValue = 0\n    }\n    this.props.updateScore(scoreValue)\n  }\n\n  applyColor = (e) => {\n    if (this.state.isCorrect !== \"NA\") {\n      return this.state.isCorrect ? \"true\" : \"false\"\n    }\n    return \"\"\n  }\n\n  render() {\n    console.log(\"re-rendered\")\n    return (\n     \n      <div className=\"question-card\">\n        {this.props.question.text}\n        <div>\n          <Button handleClick={this.handleClick} text=\"True\" name=\"true\" />\n          <Button handleClick={this.handleClick} text=\"False\" name=\"false\" />\n        </div>\n      </div>\n    )\n  }\n \n}\n"]},"metadata":{},"sourceType":"module"}