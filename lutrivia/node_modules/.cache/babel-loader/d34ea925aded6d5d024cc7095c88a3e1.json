{"ast":null,"code":"var _jsxFileName = \"/Users/staceymcknight/Development/code/Mod5/lutrivia-react/lutrivia/src/components/Question.js\";\nimport React from 'react';\nimport '../App.css';\nexport default class Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCorrect: \"no answer\"\n    };\n\n    this.handleAnswer = e => {\n      let scoreValue;\n\n      if (!!e.target.name === this.props.question.answer) {\n        this.setState({\n          isCorrect: true\n        });\n        scoreValue = 1;\n      } else {\n        this.setState({\n          isCorrect: false\n        });\n        scoreValue = 0;\n      }\n\n      this.props.updateScore(scoreValue);\n    };\n  }\n\n  render() {\n    console.log(\"re-rendered\");\n    console.log(this.state.buttonColor);\n    return React.createElement(\"div\", {\n      className: \"question-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.question.text, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn-\".concat(!this.state.isCorrect && this.state.isCorrect !== null ? \"false\" : \"true\"),\n      name: \"true\",\n      onClick: this.handleAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"True\"), React.createElement(\"button\", {\n      className: \"btn-\".concat(!this.state.isCorrect && this.state.isCorrect !== null ? \"false\" : \"true\"),\n      name: \"false\",\n      onClick: this.handleAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"False\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/staceymcknight/Development/code/Mod5/lutrivia-react/lutrivia/src/components/Question.js"],"names":["React","Question","Component","state","isCorrect","handleAnswer","e","scoreValue","target","name","props","question","answer","setState","updateScore","render","console","log","buttonColor","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEpDC,KAFoD,GAE5C;AACNC,MAAAA,SAAS,EAAE;AADL,KAF4C;;AAAA,SAMpDC,YANoD,GAMpCC,CAAD,IAAO;AACpB,UAAIC,UAAJ;;AACA,UAAI,CAAC,CAACD,CAAC,CAACE,MAAF,CAASC,IAAX,KAAoB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAA5C,EAAoD;AAClD,aAAKC,QAAL,CAAc;AAACT,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACAG,QAAAA,UAAU,GAAG,CAAb;AACD,OAHD,MAGO;AACL,aAAKM,QAAL,CAAc;AAACT,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACAG,QAAAA,UAAU,GAAG,CAAb;AACD;;AACD,WAAKG,KAAL,CAAWI,WAAX,CAAuBP,UAAvB;AACD,KAhBmD;AAAA;;AAkBpDQ,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWe,WAAvB;AACA,WAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,IADvB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,gBAAS,CAAC,KAAKhB,KAAL,CAAWC,SAAZ,IAAyB,KAAKD,KAAL,CAAWC,SAAX,KAAyB,IAAlD,GAAyD,OAAzD,GAAmE,MAA5E,CAAjB;AAAwG,MAAA,IAAI,EAAC,MAA7G;AAAoH,MAAA,OAAO,EAAE,KAAKC,YAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAQ,MAAA,SAAS,gBAAS,CAAC,KAAKF,KAAL,CAAWC,SAAZ,IAAyB,KAAKD,KAAL,CAAWC,SAAX,KAAyB,IAAlD,GAAyD,OAAzD,GAAmE,MAA5E,CAAjB;AAAwG,MAAA,IAAI,EAAC,OAA7G;AAAqH,MAAA,OAAO,EAAE,KAAKC,YAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAFF,CAFF;AAUD;;AA/BmD","sourcesContent":["import React from 'react'\nimport '../App.css'\n\nexport default class Question extends React.Component {\n\n  state = {\n    isCorrect: \"no answer\"\n  }\n\n  handleAnswer = (e) => {\n    let scoreValue;\n    if (!!e.target.name === this.props.question.answer) {\n      this.setState({isCorrect: true})\n      scoreValue = 1\n    } else {\n      this.setState({isCorrect: false})\n      scoreValue = 0\n    }\n    this.props.updateScore(scoreValue)\n  }\n\n  render() {\n    console.log(\"re-rendered\")\n    console.log(this.state.buttonColor)\n    return (\n     \n      <div className=\"question-card\">\n        {this.props.question.text}\n        <div>\n          <button className={`btn-${!this.state.isCorrect && this.state.isCorrect !== null ? \"false\" : \"true\" }`} name=\"true\" onClick={this.handleAnswer}>True</button>\n          <button className={`btn-${!this.state.isCorrect && this.state.isCorrect !== null ? \"false\" : \"true\" }`} name=\"false\" onClick={this.handleAnswer}>False</button>\n        </div>\n      </div>\n    )\n  }\n \n}\n"]},"metadata":{},"sourceType":"module"}